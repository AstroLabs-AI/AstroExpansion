name: Development Builds

on:
  push:
    branches-ignore: 
      - main
      - forge-1.20.1
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dev-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build
    
    - name: Run tests
      run: ./gradlew test
      continue-on-error: true
    
    - name: Upload development artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dev-build-${{ github.sha }}
        path: |
          build/libs/*.jar
          !build/libs/*-sources.jar
        if-no-files-found: error
        retention-days: 7
    
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Find the JAR file
          const libsDir = 'build/libs';
          const files = fs.readdirSync(libsDir);
          const jarFile = files.find(f => f.endsWith('.jar') && !f.includes('sources'));
          
          if (jarFile) {
            const comment = `## âœ… Build Successful!
            
            **Development build is ready for testing:**
            - JAR: \`${jarFile}\`
            - Artifact: \`dev-build-${{ github.sha }}\`
            
            You can download the artifacts from the [Actions tab](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
            
            ### Test Instructions:
            1. Download the artifact
            2. Extract the JAR file
            3. Place in your \`.minecraft/mods\` folder
            4. Launch with Forge 1.20.1`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }